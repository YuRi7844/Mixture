<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.buskstop.config.mybatis.mapper.performanceMapper">

	<sql id="column-performance">
		performance_no,
		performance_name,
		performance_title,
		performance_location,
		performance_date,
		performance_content,
		performance_image,
		performance_user_id,
		performance_reg_time,
		performance_code
	</sql>

	<!-- ResultMap 등록 -->
	<resultMap type="performance" id="performance-resultmap">
		<id column="performance_no" property="performanceNo"/>
		<result column="performance_name" property="performanceName"/>
		<result column="performance_title" property="performanceTitle"/>
		<result column="performance_location" property="performanceLocation"/>
		<result column="performance_date" property="performanceDate"/>
		<result column="performance_hits" property="performanceHits"/>
		<result column="performance_content" property="performanceContent"/>
		<result column="performance_image" property="performanceImage"/>
		<result column="performance_user_id" property="performanceUserId"/>
		<result column="performance_reg_time" property="performanceRegTime"/>
		<result column="performance_code" property="performanceCode"/>
	</resultMap>
	
	<!-- 공연정보 insert -->
	<insert id="insertPerformance" parameterType="Performance">
		<selectKey keyProperty="performanceNo" resultType="_int" order="BEFORE">
			select PERFORMANCE_NO_SEQ.nextval from dual
		</selectKey>
		insert into PERFORMANCE (<include refid="column-performance"/>)
		values(#{performanceNo}, #{performanceName}, #{performanceTitle}, 
		#{performanceLocation}, #{performanceDate}, #{performanceContent}, 
		#{performanceImage}, #{performanceUserId}, sysdate, #{performanceCode})
	</insert>
	
	<update id="updatePerformance" parameterType="Performance">
		UPDATE performance
		<set>
			<if test="performanceName != null">performance_name=#{performanceName},</if>
			<if test="performanceTitle != null">performance_title=#{performanceTitle},</if>
			<if test="performanceLocation != null">performance_location=#{performanceLocation},</if>
			<if test="performanceDate != null">performance_date=#{performanceDate},</if>
			<if test="performanceContent != null">performance_content=#{performanceContent},</if>
			<if test="performanceImage != null">performance_image=#{performanceImage},</if>
			<if test="performanceUserId != null">performance_user_id = #{performanceUserId}</if>
		</set>
		WHERE performance_no=#{performanceNo}
	</update>
	
	<delete id="deletePerformanceByPerformanceNo" parameterType="int">
		delete from performance 
		where performance_no = #{performanceNo}
	</delete>
	
	<!-- ****************************************************************************** -->
	
	<!-- 공연정보 전체 조회 select paging mock -->
	<select id="selectPerformance" resultMap="performance-resultmap" parameterType="map">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits,(SELECT COUNT(*) FROM performance_comment WHERE performance_no=#{performanceNo}) AS commentCount
			from (
				select * 
				from performance
				where performance_code = 0
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 공연정보 전체 조회 count -->
	<select id="selectPerformanceCount" resultType="_int">
		select count(*) from performance where performance_code = 0
	</select>
	
	<!-- 아티스트 공연정보 전체조회 -->
	<select id="selectArtistPerformance" resultMap="performance-resultmap" parameterType="map">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_code = 1
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 아티스트공연정보 카운트 -->
	<select id="selectArtistPerformanceCount" resultType="_int">
		select count(*) from performance where performance_code = 1
	</select>
	
	<!-- ****************************************************************************** -->
	
	<!-- 공연정보 조회 -->
	<select id="selectAllPerfor" resultMap="performance-resultmap">
		select *
		from performance
	</select>
	
	
	<!-- 공연정보 글 보기 (디테일 뷰)-->
	<select id="selectPerformanceByPerformanceNo" parameterType="_int" resultMap="performance-resultmap">
		select * from performance where performance_no = #{performanceNo}	
	</select>
	
	<!-- 공연정보 글 보기 (디테일 뷰) 조회수 증가-->
	<update id="updatePerformanceCountByPerformanceNo" parameterType="_int">
	update performance
	set performance_hits = NVL(performance_hits, 0) + 1
	where performance_no = #{performanceNo}	
	</update>


<!-- ************************************************************************************************************************* -->
	<!-- 공연정보 제목으로 검색 -->
	<select id="selectPerformanceByPerformanceTitle" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_title like '%'||#{performanceTitle}||'%' AND performance_code = 0
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	
	<!-- 공연정보 제목으로 검색 카운트 -->
	<select id="selectPerformanceCountByTitle" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_title like '%'||#{performanceTitle}||'%' AND performance_code = 0
	</select>
	
	<!-- 공연정보 작성자로 검색 -->
	<select id="selectPerformanceByPerformanceUserId" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_user_id like '%'||#{performanceUserId}||'%' AND performance_code = 0
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	
	<!-- 공연정보 작성자으로 검색 카운트 -->
	<select id="selectPerformanceCountByUserId" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_user_id like '%'||#{performanceUserId}||'%' AND performance_code = 0
	</select>
	
	<!-- 공연정보 공연장소로 검색 -->
	<select id="selectPerformanceByPerformanceLocation" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_location like '%'||#{performanceLocation}||'%' AND performance_code = 0
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 공연정보 공연장소로 검색 카운트 -->
	<select id="selectPerformanceCountByLocation" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_location like '%'||#{performanceLocation}||'%' AND performance_code = 0
	</select>
	
	<!-- 공연정보 공연이름으로 검색 -->
	<select id="selectPerformanceByPerformanceName" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_name like '%'||#{performanceName}||'%' AND performance_code = 0
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 공연정보 공연이름으로 검색 카운트 -->
	<select id="selectPerformanceCountByPerformanceName" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_name like '%'||#{performanceName}||'%' AND performance_code = 0
	</select>
	
	<!-- 공연정보 내용으로 검색 -->
	<select id="selectPerformanceByPerformanceContent" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_content like '%'||#{performanceContent}||'%' AND performance_code = 0
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 공연정보 공연이름으로 검색 카운트 -->
	<select id="selectPerformanceCountByPerformanceContent" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_content like '%'||#{performanceContent}||'%' AND performance_code = 0
	</select>
	
	<!-- #################################################################################################################### -->
	
	<!-- 공연정보 제목으로 검색 -->
	<select id="selectArtistPerformanceByPerformanceTitle" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_title like '%'||#{performanceTitle}||'%' AND performance_code = 1
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	
	<!-- 공연정보 제목으로 검색 카운트 -->
	<select id="selectArtistPerformanceCountByTitle" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_title like '%'||#{performanceTitle}||'%' AND performance_code = 1
	</select>
	
	<!-- 공연정보 작성자로 검색 -->
	<select id="selectArtistPerformanceByPerformanceUserId" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_user_id like '%'||#{performanceUserId}||'%' AND performance_code = 1
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	
	<!-- 공연정보 작성자으로 검색 카운트 -->
	<select id="selectArtistPerformanceCountByUserId" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_user_id like '%'||#{performanceUserId}||'%' AND performance_code = 1
	</select>
	
	<!-- 공연정보 공연장소로 검색 -->
	<select id="selectArtistPerformanceByPerformanceLocation" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_location like '%'||#{performanceLocation}||'%' AND performance_code = 1
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 공연정보 공연장소로 검색 카운트 -->
	<select id="selectArtistPerformanceCountByLocation" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_location like '%'||#{performanceLocation}||'%' AND performance_code = 1
	</select>
	
	<!-- 공연정보 공연이름으로 검색 -->
	<select id="selectArtistPerformanceByPerformanceName" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_name like '%'||#{performanceName}||'%' AND performance_code = 1
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 공연정보 공연이름으로 검색 카운트 -->
	<select id="selectArtistPerformanceCountByPerformanceName" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_name like '%'||#{performanceName}||'%' AND performance_code = 1
	</select>
	
	<!-- 공연정보 내용으로 검색 -->
	<select id="selectArtistPerformanceByPerformanceContent" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_content like '%'||#{performanceContent}||'%' AND performance_code = 1
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 공연정보 공연이름으로 검색 카운트 -->
	<select id="selectArtistPerformanceCountByPerformanceContent" resultType="_int" parameterType="String">
		select count(*) 
		from performance
		where performance_content like '%'||#{performanceContent}||'%' AND performance_code = 0
	</select>
	
<!-- ************************************************************************************************************************* -->
	<!-- 공연정보 날짜로 검색 -->
	<select id="selectPerformanceByPerformanceDate" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_date &gt;= #{sDate}
				and performance_date &lt;= #{eDate}
				and performance_code = 0
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 공연정보 공연이름으로 검색 카운트 -->
	<select id="selectPerformanceCountByPerformanceDate" resultType="_int" parameterType="map">
		select count(*) 
		from performance
		where performance_date &gt;= #{sDate}
		and performance_date &lt;= #{eDate}
		and performance_code = 0
	</select>
	
	<select id="selectArtistPerformanceByPerformanceDate" parameterType="map" resultMap="performance-resultmap">
		select <include refid="column-performance"/>, performance_hits
		from(
			select rownum rn, <include refid="column-performance"/>, performance_hits
			from (
				select * 
				from performance
				where performance_date &gt;= #{sDate}
				and performance_date &lt;= #{eDate}
				and performance_code = 1
				order by performance_no desc
				)
			where rownum &lt;= #{end}
		)
		where rn >= #{begin}
	</select>
	<!-- 공연정보 공연이름으로 검색 카운트 -->
	<select id="selectArtistPerformanceCountByPerformanceDate" resultType="_int" parameterType="map">
		select count(*) 
		from performance
		where performance_date &gt;= #{sDate}
		and performance_date &lt;= #{eDate}
		and performance_code = 1
	</select>
	
	<select id="selectArtistPerformanceById" parameterType="string" resultMap="performance-resultmap">
		SELECT	PERFORMANCE_NO,
				PERFORMANCE_NAME,
				PERFORMANCE_TITLE,
				PERFORMANCE_LOCATION,
				PERFORMANCE_DATE,
				PERFORMANCE_HITS,
				PERFORMANCE_CONTENT,
				PERFORMANCE_IMAGE,
				PERFORMANCE_USER_ID,
				PERFORMANCE_REG_TIME
		FROM 	PERFORMANCE
		WHERE 	PERFORMANCE_USER_ID = #{value} AND PERFORMANCE_DATE &gt; SYSDATE
				AND PERFORMANCE_CODE = 1
		ORDER BY PERFORMANCE_DATE DESC	
	</select>
	
	<!-- 관리자용 -->
	<select id="adminSelectPerformance" parameterType="_int" resultMap="performance-resultmap">
		SELECT	<include refid="column-performance"/>
		FROM 	PERFORMANCE
		WHERE	PERFORMANCE_CODE = #{value}
	</select>
	
	<select id="selectPerformanceByAdminSearch" parameterType="Map" resultMap="performance-resultmap">
		SELECT 	<include refid="column-performance"/>
		FROM	PERFORMANCE
		<where>
			PERFORMANCE_CODE = #{code}
			<if test="name != null">
				AND		PERFORMANCE_NAME LIKE '%'||#{name}||'%'	
			</if>
			<if test="location != null">
				AND		PERFORMANCE_LOCATION LIKE '%'||#{location}||'%'
			</if>
			<if test="userId != null">
				AND		PERFORMANCE_USER_ID LIKE '%'||#{userId}||'%'
			</if>
			<if test="sDate != null">
				AND		PERFORMANCE_DATE >= #{sDate}
			</if>
			<if test="eDate != null">
				AND		PERFORMANCE_DATE &lt;= #{eDate}
			</if>
		</where>
	</select>
	
	<!-- admin -->
	<select id="selectAllArtistPerformance" resultMap="performance-resultmap">
		SELECT	<include refid="column-performance"/>
		FROM	PERFORMANCE
		WHERE	PERFORMANCE_CODE = 1
	</select>
	
	<!-- 내가 올린 공연 정보 -->
	<select id="selectMyPerformance" parameterType="String" resultMap="performance-resultmap">
		select * 
		from performance
		where performance_user_id = #{performanceUserId}			
	</select>
	
	<resultMap type="performance" id="performance-likecount-resultmap">
		<id property="performanceNo" column="PERFORMANCE_LIKE_NO"/>
		<result property="likeCount" column="COUNT(*)"/>
	</resultMap>
	
	<select id="selectPerformanceByLikeCount" resultMap="performance-likecount-resultmap">
		SELECT 	PERFORMANCE_LIKE_NO, COUNT(*)
		FROM 	PERFORMANCE_LIKE
		GROUP BY PERFORMANCE_LIKE_NO
		ORDER BY COUNT(*) DESC
	</select>
	
	<select id="selectArtistPerformanceCountById" parameterType="string" resultType="_int">
		SELECT	COUNT(*)
		FROM	PERFORMANCE
		WHERE	PERFORMANCE_USER_ID = #{value}
	</select>
</mapper>