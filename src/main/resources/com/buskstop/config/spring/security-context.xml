<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="com.buskstop.security"/>
	<!-- Password 암호화 처리 bean -->
	<beans:bean name="passwordEncoder" 
					class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	
	<!-- 
		admin/** : ROLE_ADMIN
		member/** : ROLE_MEMBER, ROLE_ARTIST, ROLE_PODUCER - 회원 모두
		producer/** : ROLE_PRODUCER - 프리미엄 대관공급자
		artist/** : ROLE_ARTIST - 아티스트
	 -->				
	<http>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/member/**" access="hasAnyRole('ROLE_MEMBER','ROLE_ARTIST','ROLE_PRODUCER')"/>
		<intercept-url pattern="/producer/**" access="hasRole('ROLE_PRODUCER')"/>
		<intercept-url pattern="/artist/**" access="hasRole('ROLE_ARTIST')"/>
		<intercept-url pattern="/**" access="permitAll"/>
		
		
		<form-login
						login-page="/login_form.do"
						login-processing-url="/login.do"
						username-parameter="userId"
						password-parameter="userPassword"
						authentication-failure-handler-ref="loginFailHandler"
						default-target-url="/index.do"/>
		<logout logout-url="/logout.do" logout-success-url="/index.do"/>
		
		<!-- 사용자가 권한이 없는 요청을 한 경우 이동할 url 등록 , 등록하지 않으면 403 에러페이지.-->
		<access-denied-handler error-page="/error/access_denied.do"/>
	</http>
					
	<!-- 인증(로그인) 처리를 담당할 bean 등록 => AuthenticationProvider -->
	<authentication-manager>
		<authentication-provider ref="userAuthenticationProvider"/>
	</authentication-manager>
</beans:beans>
